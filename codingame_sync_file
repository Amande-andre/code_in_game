/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.hpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anmande <anmande@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/12/18 16:17:27 by anmande           #+#    #+#             */
/*   Updated: 2023/12/18 18:24:50 by anmande          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef MAIN_HPP

#define MAIN_HPP

#endif
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   drone.hpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anmande <anmande@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/12/18 17:36:03 by anmande           #+#    #+#             */
/*   Updated: 2023/12/18 19:10:52 by anmande          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef DRONE_HPP

#define DRONE_HPP
#include <iostream>
#include <string>


class Drone
{
private:
    int _id;
    int _pos_x;
    int _pos_y;
public:
    Drone();
    ~Drone();
    void setDrone(int x, int y, int id);
    void setDronePos(int x, int y);
    void setX(bool _bool);
    void setY(bool _bool);
    int  getX();
    int  getY();
};



#endif/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anmande <anmande@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/12/18 16:16:07 by anmande           #+#    #+#             */
/*   Updated: 2023/12/19 14:00:59 by anmande          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Score points by scanning valuable fish faster than your opponent.
 **/

int main()
{
    int creature_count;
    cin >> creature_count; cin.ignore();
    for (int i = 0; i < creature_count; i++) {
        int creature_id;
        int color;
        int type;
        cin >> creature_id >> color >> type; cin.ignore();
    }

    int turn = 0;
    int up = 0;
    int down = 0;
    //int left = 0;
    int right = 0;
    // game loop
    while (1) {
        int my_score;
        cin >> my_score; cin.ignore();
        int foe_score;
        cin >> foe_score; cin.ignore();
        int my_scan_count;
        cin >> my_scan_count; cin.ignore();
        for (int i = 0; i < my_scan_count; i++) {
            int creature_id;
            cin >> creature_id; cin.ignore();
        }
        int foe_scan_count;
        cin >> foe_scan_count; cin.ignore();
        for (int i = 0; i < foe_scan_count; i++) {
            int creature_id;
            cin >> creature_id; cin.ignore();
        }
        int my_drone_count;
        cin >> my_drone_count; cin.ignore();
        //creer les drones ici;
        Drone tab[my_drone_count];
        for (int i = 0; i < my_drone_count; i++) {
            int drone_id;
            int drone_x;
            int drone_y;
            int emergency;
            int battery;
            cin >> drone_id >> drone_x >> drone_y >> emergency >> battery; cin.ignore();
            tab[i].setDrone(drone_x, drone_y, drone_id);
        }
        int foe_drone_count;
        cin >> foe_drone_count; cin.ignore();
        for (int i = 0; i < foe_drone_count; i++) {
            int drone_id;
            int drone_x;
            int drone_y;
            int emergency;
            int battery;
            cin >> drone_id >> drone_x >> drone_y >> emergency >> battery; cin.ignore();  
        }
        int drone_scan_count;
        cin >> drone_scan_count; cin.ignore();
        for (int i = 0; i < drone_scan_count; i++) {
            int drone_id;
            int creature_id;
            cin >> drone_id >> creature_id; cin.ignore();
        }
        int visible_creature_count;
        cin >> visible_creature_count; cin.ignore();
        for (int i = 0; i < visible_creature_count; i++) {
            int creature_id;
            int creature_x;
            int creature_y;
            int creature_vx;
            int creature_vy;
            cin >> creature_id >> creature_x >> creature_y >> creature_vx >> creature_vy; cin.ignore();
        }
        int radar_blip_count;
        cin >> radar_blip_count; cin.ignore();
        for (int i = 0; i < radar_blip_count; i++) {
            int drone_id;
            int creature_id;
            string radar;
            cin >> drone_id >> creature_id >> radar; cin.ignore();
        }
        for (int i = 0; i < my_drone_count; i++) {

            // Write an action using cout. DON'T FORGET THE "<< endl"
            // To debug: cerr << "Debug messages..." << endl;
            if (up)
                tab[i].setY(true);
            else if (tab[i].getX() <= 9000 && down == 0)
                tab[i].setX(true);
            else 
            {
                tab[i].setX(false);
                down = 1;
                if (tab[i].getX() <= 800)
                    down = 0;
            }
            if (tab[i].getY() <= 9000 && right == 0)
                tab[i].setY(true);
            else 
            {
                tab[i].setY(false);    
                right = 1;
                if (tab[i].getY() <= 200)
                    right = 0;
            }
            cout << "MOVE " << tab[i].getX() << " " << tab[i].getY() << " " << "1" << endl; // MOVE <x> <y> <light (1|0)> | WAIT <light (1|0)>
        }
        turn++;
    }
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   drone.cpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anmande <anmande@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/12/18 17:35:27 by anmande           #+#    #+#             */
/*   Updated: 2023/12/19 11:14:01 by anmande          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <iostream>
#include <string>


Drone::Drone()
{
    this->_pos_x = 0;
    this->_pos_y = 0;
}

Drone::~Drone()
{
}

void Drone::setDrone(int x, int y, int id) {
    _pos_x += x;
    _pos_y += y;
    _id = id;
}

int Drone::getX()
{
    return (this->_pos_x);
}

int Drone::getY()
{
    return (this->_pos_y);
}

// void Drone::droneMvt(bool TRUE)
// {
    
// }

void Drone::setX(bool _bool)
{
    if (_bool)
        this->_pos_x += 400;
    else
        this->_pos_x -= 400;
}

void Drone::setY(bool _bool)
{
    if (_bool)
        this->_pos_y += 800;
    else
        this->_pos_y -= 800;
}
